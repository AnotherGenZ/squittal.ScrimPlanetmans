@if (_renderedCaptureCount == 1)
{
    <div style="display: inline-block; width: min-content;"><span class="iconify capture-flag" data-icon="ion:flag" data-inline="false"></span></div>
}
else if (_renderedCaptureCount == 2)
{
    <div style="display: inline-block; width: 24px; white-space: nowrap;"><span class="iconify capture-flag" data-icon="ion:flag" data-inline="false"></span><span class="iconify capture-flag" data-icon="ion:flag" data-inline="false"></span></div>
}
else
{
    <div style="display: inline-block;"><span class="iconify capture-flag" data-icon="ion:flag" data-inline="false"></span><span style="color: var(--sq-ov-ps2-primary-light); text-shadow: -1px 0px 1px var(--sq-black); font-size: 1rem;">x@_renderedCaptureCount</span></div>
}

@code {
    [Parameter]
    public int i_captureCount { get; set; }
    private int _renderedCaptureCount { get; set; } = 0;

    #region Initialization Methods
    protected override void OnParametersSet()
    {
        if (i_captureCount != _renderedCaptureCount)
        {
            _renderedCaptureCount = i_captureCount;

            InvokeAsyncStateHasChanged();
        }
    }
    #endregion Initialization Methods

    private void InvokeAsyncStateHasChanged()
    {
        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}